{
  "name": "mscgenjs-cli",
  "version": "4.0.1",
  "description": "Render sequence charts from the command line",
  "author": "Sander Verweij",
  "contributors": [
    {
      "name": "djMax (Max Metral)",
      "url": "https://github.com/djMax"
    }
  ],
  "license": "GPL-3.0",
  "engines": {
    "node": "^10||^12||>=13"
  },
  "bugs": {
    "url": "https://github.com/mscgenjs/mscgenjs-cli/issues"
  },
  "homepage": "https://github.com/mscgenjs/mscgenjs-cli",
  "repository": {
    "type": "git",
    "url": "https://github.com/mscgenjs/mscgenjs-cli"
  },
  "bin": {
    "mscgen_js": "bin/mscgen_js",
    "mscgenjs": "bin/mscgen_js"
  },
  "main": "dist/index.js",
  "files": [
    "bin/",
    "dist/",
    "package.json",
    "README.md",
    "COPYPING",
    "LICENSE.md"
  ],
  "keywords": [
    "mscgen",
    "sequence chart",
    "sequence diagram",
    "xu",
    "msgenny"
  ],
  "dependencies": {
    "ajv": "6.12.2",
    "commander": "5.1.0",
    "get-stream": "5.1.0",
    "lodash": "4.17.19",
    "mscgenjs": "5.0.0",
    "mscgenjs-inpage": "3.0.0",
    "puppeteer": "2.1.1",
    "semver": "7.3.2"
  },
  "devDependencies": {
    "@types/chai": "4.2.11",
    "@types/chai-as-promised": "7.1.2",
    "@types/lodash": "4.14.156",
    "@types/mocha": "7.0.2",
    "@types/node": "14.0.13",
    "@types/puppeteer": "3.0.0",
    "@types/semver": "7.2.0",
    "chai": "4.2.0",
    "chai-as-promised": "7.1.1",
    "dependency-cruiser": "9.8.0",
    "mocha": "8.0.1",
    "npm-run-all": "4.1.5",
    "nyc": "15.1.0",
    "prettier": "2.0.5",
    "shx": "0.3.2",
    "ts-node": "8.10.2",
    "tslint": "6.1.2",
    "tslint-config-prettier": "1.18.0",
    "typescript": "3.9.5",
    "upem": "4.0.1"
  },
  "upem": {
    "donotup": [
      {
        "package": "puppeteer",
        "because": "puppeteer 3.0.1 doesn't install correctly on node 14: https://github.com/puppeteer/puppeteer/issues/5719"
      }
    ]
  },
  "scripts": {
    "build": "npm-run-all build:clean build:compile build:copy",
    "build:clean": "shx rm -rf dist/*",
    "build:compile": "tsc --project src/tsconfig.json",
    "build:copy": "npm-run-all build:copy-template build:copy-schema",
    "build:copy-template": "shx cp src/actions/template.html dist/actions/template.html",
    "build:copy-schema": "shx cp src/cli/puppeteer-options.schema.json dist/cli/.",
    "check": "npm-run-all build lint depcruise test:cover",
    "depcruise": "depcruise --validate -- src test",
    "depcruise:graph": "npm-run-all --parallel depcruise:graph:*",
    "depcruise:graph:html": "depcruise --output-type dot --validate -- src | dot -Gsplines=ortho -T svg | cat docs/assets/depcruise-graph-head.snippet.html - docs/assets/depcruise-graph-foot.snippet.html > docs/dependencygraph.html",
    "depcruise:graph:png": "depcruise --output-type dot --validate -- src | dot -Gsplines=ortho -Gdpi=192 -T png | pngquant - > docs/dependencygraph.png",
    "lint": "tslint {src,test}/**/*.ts",
    "lint:fix": "npm-run-all lint:tslint-fix lint:prettier",
    "lint:tslint-fix": "tslint --format verbose --fix {src,test}/**/*.ts",
    "lint:prettier": "prettier --write {src,test}/**/*.ts src/**/*.{json,html}",
    "scm:push": "run-p --aggregate-output scm:push:*",
    "scm:push:github": "run-p --aggregate-output scm:push:github:*",
    "scm:push:github:commits": "git push",
    "scm:push:github:tags": "git push --tags",
    "scm:push:gitlab-mirror": "run-p --aggregate-output scm:push:gitlab-mirror:*",
    "scm:push:gitlab-mirror:commits": "git push gitlab-mirror",
    "scm:push:gitlab-mirror:tags": "git push --tags gitlab-mirror",
    "scm:push:bitbucket-mirror": "run-p --aggregate-output scm:push:bitbucket-mirror:*",
    "scm:push:bitbucket-mirror:commits": "git push bitbucket-mirror",
    "scm:push:bitbucket-mirror:tags": "git push --tags bitbucket-mirror",
    "scm:stage": "git add .",
    "test": "mocha --require ts-node/register --timeout 10000 --recursive test/**/*.ts",
    "test:cover": "nyc --extension .ts --check-coverage npm test",
    "update-dependencies": "npm-run-all upem:update upem:install lint:fix depcruise build test",
    "upem:update": "npm outdated --json | upem",
    "upem:install": "npm install",
    "version": "run-s build depcruise:graph scm:stage",
    "watch": "tsc --project src/tsconfig.json --watch"
  },
  "nyc": {
    "statements": 95,
    "branches": 90,
    "functions": 88,
    "lines": 95,
    "reporter": [
      "text-summary",
      "html",
      "lcov"
    ]
  }
}
