/*
 * a possible re-Captcha integration, assuming the client has
 * the re-Captcha widget embedded in the site
 *
 * Please refer to https://developers.google.com/recaptcha/intro
 * if you're serious about implementing re-Captcha
 */

wordwraparcs=true, hscale=1.2;

customer, client, server, google : Google reCaptcha service;

customer => client : "log in with credentials, reCaptcha";
client => google : getResponse(reCaptcha);
google >> client : reCaptcha response;
client => server : "POST credentials, reCaptcha response";
server => google : "POST reCaptcha response, secret";
---: this is a comment;
customer alt google : reCaptcha valid {
  google >> server : OK;
  server rbox server : "check hostname, error codes";
  server rbox server : do regular login processing;
  --- : reCaptcha not valid;
  google >> server : NOK;
  server >> client : HTTP 40x 'reCaptcha';
  client >> customer : sorry dude - captcha didn't check out;
  --- : other error and/ or time-out;
  ...,
  google -x server;
  server note client : Treating this as an error will mean your log in won't work when the reCaptcha service is down.\n\nIt depends on the gig what you actually do here:\n\n- safety before everything shop: throw an error\n- acceptable risk vs revenue shop: do regular login;
  server >> client : Error (HTTP 500?);
  client >> customer : sorry dude;
};
